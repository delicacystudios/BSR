const { SlashCommandBuilder, EmbedBuilder, PermissionsBitField } = require("discord.js");

module.exports = {
    data: new SlashCommandBuilder()
        .setName("clan")
        .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–∞–≤–µ –∫–ª–∞–Ω–∞"),
        
    async execute(interaction) {
        await interaction.deferReply();

        // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        const guild = interaction.guild;
        if (!guild) {
            return interaction.editReply({
                embeds: [new EmbedBuilder()
                    .setColor(interaction.client.config.message.colors.error)
                    .setTitle("–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")]
            });
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
        if (!guild.members.me.permissions.has(PermissionsBitField.Flags.ViewAuditLog)) {
            return interaction.editReply({
                embeds: [new EmbedBuilder()
                    .setColor(interaction.client.config.message.colors.error)
                    .setTitle("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!")]
            });
        }

        let clanGroups = {
            "–ö–æ–ª–ª–µ—Ä(-—ã)": [],
            "–ö–æ–º–±–∞—Ç—ë—Ä(-—ã)": [],
            "–§–∞—Ä–º–∏–ª–∞(-—ã)": [],
            "–§–µ—Ä–º–µ—Ä(-—ã)": [],
            "–≠–ª–µ–∫—Ç—Ä–∏–∫(-–∏)": []
        };

        // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–æ–ª–µ–π –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –≥—Ä—É–ø–ø–∞–º
        const roleMapping = {
            "Caller": "–ö–æ–ª–ª–µ—Ä(-—ã)",
            "Combat": "–ö–æ–º–±–∞—Ç—ë—Ä(-—ã)",
            "Farmila": "–§–∞—Ä–º–∏–ª–∞(-—ã)",
            "Farmer": "–§–µ—Ä–º–µ—Ä(-—ã)",
            "Electro": "–≠–ª–µ–∫—Ç—Ä–∏–∫(-–∏)"
        };

        try {
            // –î–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏ –ø–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            for (const [roleKey, groupName] of Object.entries(roleMapping)) {
                const roleId = interaction.client.config.roles[roleKey];
                if (roleId) {
                    const role = guild.roles.cache.get(roleId);
                    if (role) {
                        const membersWithRole = role.members.map(member => `<@${member.user.id}>`);
                        if (membersWithRole.length > 0) {
                            clanGroups[groupName] = membersWithRole;
                        }
                    }
                }
            }

            // –°–æ–∑–¥–∞–µ–º Embed
            const embed = new EmbedBuilder()
                .setColor(interaction.client.config.message.colors.main)
                .setTitle("üìú –°–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞")
                .setFooter({ text: interaction.client.config.message.footer });

            let hasMembers = false;

            // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã –≤ Embed
            for (const [groupName, members] of Object.entries(clanGroups)) {
                if (members.length > 0) {
                    embed.addFields({
                        name: `\`${groupName}\` (${members.length})`,
                        value: members.join("\n"),
                        inline: false
                    });
                    hasMembers = true;
                }
            }

            if (!hasMembers) {
                embed.setDescription("‚ùå –í –∫–ª–∞–Ω–µ –ø–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—è–º–∏.");
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed
            interaction.editReply({ embeds: [embed] });

        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:", error);
            interaction.editReply({
                embeds: [new EmbedBuilder()
                    .setColor(interaction.client.config.message.colors.error)
                    .setTitle("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!")]
            });
        }
    }
};
