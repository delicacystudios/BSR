const { EmbedBuilder, PermissionsBitField } = require('discord.js');

module.exports = {
    name: 'clan',
    aliases: ['–∫–ª–∞–Ω'],
    description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–∞–≤–µ –∫–ª–∞–Ω–∞',
    category: `General`,
    usage: [],

    run: async (client, message, args) => {
        // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä –ø–æ ID –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        const serverId = client.config.serverID;
        if (!serverId) {
            return message.channel.send({
                embeds: [new EmbedBuilder().setColor(client.config.message.colors.error).setTitle('–ù–µ —É–∫–∞–∑–∞–Ω ID —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ–Ω—Ñ–∏–≥–µ!')]
            });
        }

        // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        const guild = client.guilds.cache.get(serverId);
        if (!guild) {
            return message.channel.send({
                embeds: [new EmbedBuilder().setColor(client.config.message.colors.error).setTitle('–°–µ—Ä–≤–µ—Ä —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.')]
            });
        }

        if (!guild.members.me.permissions.has(PermissionsBitField.Flags.ViewAuditLog)) {
            return message.channel.send({
                embeds: [new EmbedBuilder().setColor(client.config.message.colors.error).setTitle('–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!')]
            });
        }

        let clanGroups = {
            '–ö–æ–ª–ª–µ—Ä(-—ã)': [],
            '–ö–æ–º–±–∞—Ç—ë—Ä(-—ã)': [],
            '–§–∞—Ä–º–∏–ª–∞(-—ã)': [],
            '–§–µ—Ä–º–µ—Ä(-—ã)': [],
            '–≠–ª–µ–∫—Ç—Ä–∏–∫(-–∏)': []
        };

        // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–æ–ª–µ–π –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –≥—Ä—É–ø–ø–∞–º
        const roleMapping = {
            'Caller': '–ö–æ–ª–ª–µ—Ä(-—ã)',
            'Combat': '–ö–æ–º–±–∞—Ç—ë—Ä(-—ã)',
            'Farmila': '–§–∞—Ä–º–∏–ª–∞(-—ã)',
            'Farmer': '–§–µ—Ä–º–µ—Ä(-—ã)',
            'Electro': '–≠–ª–µ–∫—Ç—Ä–∏–∫(-–∏)'
        };

        try {
            // –î–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ ID —Ä–æ–ª–∏
            for (const [roleKey, groupName] of Object.entries(roleMapping)) {
                const roleId = client.config.roles[roleKey];
                if (roleId) {
                    const role = guild.roles.cache.get(roleId);
                    if (role) {
                        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —ç—Ç–æ–π —Ä–æ–ª—å—é
                        const membersWithRole = role.members.map(member => `<@${member.user.id}>`);
                        if (membersWithRole.length > 0) {
                            clanGroups[groupName] = membersWithRole;
                        }
                    }
                }
            }

            // –°–æ–∑–¥–∞–µ–º Embed –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            const embed = new EmbedBuilder()
                .setColor(client.config.message.colors.main)
                .setTitle(`üìú –°–æ—Å—Ç–∞–≤ –∫–ª–∞–Ω–∞`)
                .setFooter({ text: client.config.message.footer });

            let hasMembers = false;

            // –î–æ–±–∞–≤–ª—è–µ–º –≤ embed —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
            for (const [groupName, members] of Object.entries(clanGroups)) {
                if (members.length > 0) {
                    embed.addFields({
                        name: `\`${groupName}\` (${members.length})`,
                        value: members.join('\n'),
                        inline: false
                    });
                    hasMembers = true;
                }
            }

            if (!hasMembers) {
                embed.setDescription(`‚ùå –í –∫–ª–∞–Ω–µ –ø–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—è–º–∏.`);
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            message.channel.send({ embeds: [embed] });

        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:`, error);
            message.channel.send({
                embeds: [new EmbedBuilder().setColor(client.config.message.colors.error).setTitle('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!')]
            });
        }
    }
};
